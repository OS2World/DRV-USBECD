Turbo Assembler	 Version 4.1	    12-10-13 18:38:54	    Page 1
stream.asm



      1					 .486p
      2	00000000			 model flat
      3					 ideal
      4
      5					 extrn DosClose:near
      6					 extrn DosCloseEventSem:near
      7					 extrn DosCreateEventSem:near
      8					 extrn DosDevIOCtl:near
      9					 extrn DosExit:near
     10					 extrn DosExitList:near
     11					 extrn DosOpen:near
     12					 extrn DosResetEventSem:near
     13					 extrn DosSetPriority:near
     14					 extrn DosSleep:near
     15					 extrn DosWaitEventSem:near
     16					 extrn DosWrite:near
     17
     18	00000000			 stack 8192
     19
     20	00002000			 dataseg ; must	be first
     21					 ; define isochronous buffers
     22		  =00010000		 aSize=65536 ; maximum value
     23		  =FFFF			 mSize=65535 ; maximum value
     24	00000000  010000*(00)		 IsoData db aSize dup(0)
     25		  =0003			 iUsed=3 ; number of buffers
     26		  =5555			 iSize=mSize/iUsed ; buffer size
     27		  =FFFF			 tSize=iSize*iUsed ; total size
     28		  =0000			 fUsed=0 ; number of frames
     29
     30	00010000			 dataseg
     31	00010000  5C 44	45 56 5C	 szDevice db '\DEV\'
     32	00010005  24 00	00 00 00 00 00+	 szDriver db '$',0,0,0,0,0,0,0,0
     33		  00 00
     34	0001000E  73 74	72 65 61 6D 2E+	 szOutput db 'stream.raw',0
     35		  72 61	77 00
     36
     37	00010019			 dataseg
     38	00010019  73 74	61 72 74 65 64+	 sGood0	db 'started.',13,10
     39		  2E 0D	0A
     40	00010023  73 74	6F 70 70 65 64+	 sGood1	db 'stopped.',13,10
     41		  2E 0D	0A
     42	0001002D  77 61	69 74 69 6E 67+	 sGood2	db 'waiting...',13,10
     43		  2E 2E	2E 0D 0A
     44	00010039  61 77	61 69 74 69 6E+	 sGood3	db 'awaiting...',13,10
     45		  67 2E	2E 2E 0D 0A
     46	00010046  71 75	69 74 74 69 6E+	 sGood4	db 'quitting...',13,10
     47		  67 2E	2E 2E 0D 0A
     48	00010053			 label sGood5 byte
     49
     50	00010053			 dataseg
     51	00010053  20 6F	70 65 6E 69 6E+	 sInfo0	db ' opening usbecd.sys',13,10
     52		  67 20	75 73 62 65 63+
     53		  64 2E	73 79 73 0D 0A
     54	00010068  20 73	65 74 74 69 6E+	 sInfo1	db ' setting configuration',13,10
     55		  67 20	63 6F 6E 66 69+
     56		  67 75	72 61 74 69 6F+
     57		  6E 0D	0A
Turbo Assembler	 Version 4.1	    12-10-13 18:38:54	    Page 2
stream.asm



     58	00010080  20 73	65 74 74 69 6E+	 sInfo2	db ' setting alternate interface',13,10
     59		  67 20	61 6C 74 65 72+
     60		  6E 61	74 65 20 69 6E+
     61		  74 65	72 66 61 63 65+
     62		  0D 0A
     63	0001009E  20 63	72 65 61 74 69+	 sInfo3	db ' creating event semaphore',13,10
     64		  6E 67	20 65 76 65 6E+
     65		  74 20	73 65 6D 61 70+
     66		  68 6F	72 65 0D 0A
     67	000100B9  20 6F	70 65 6E 69 6E+	 sInfo4	db ' opening isochronous',13,10
     68		  67 20	69 73 6F 63 68+
     69		  72 6F	6E 6F 75 73 0D+
     70		  0A
     71	000100CF  20 71	75 65 75 69 6E+	 sInfo5	db ' queuing isochronous',13,10
     72		  67 20	69 73 6F 63 68+
     73		  72 6F	6E 6F 75 73 0D+
     74		  0A
     75	000100E5  20 63	6C 6F 73 69 6E+	 sInfo6	db ' closing isochronous',13,10
     76		  67 20	69 73 6F 63 68+
     77		  72 6F	6E 6F 75 73 0D+
     78		  0A
     79	000100FB  20 63	6C 6F 73 69 6E+	 sInfo7	db ' closing event semaphore',13,10
     80		  67 20	65 76 65 6E 74+
     81		  20 73	65 6D 61 70 68+
     82		  6F 72	65 0D 0A
     83	00010115  20 72	65 73 65 74 74+	 sInfo8	db ' resetting default interface',13,10
     84		  69 6E	67 20 64 65 66+
     85		  61 75	6C 74 20 69 6E+
     86		  74 65	72 66 61 63 65+
     87		  0D 0A
     88	00010133  20 63	6C 6F 73 69 6E+	 sInfo9	db ' closing usbecd.sys',13,10
     89		  67 20	75 73 62 65 63+
     90		  64 2E	73 79 73 0D 0A
     91	00010148  20 64	65 73 63 72 69+	 sInfoA	db ' descriptor:'
     92		  70 74	6F 72 3A
     93	00010154  20 70	61 72 61 6D 65+	 sInfoB	db ' parameters:'
     94		  74 65	72 73 3A
     95	00010160  20 63	6F 6D 70 6C 65+	 sInfoC	db ' complete:'
     96		  74 65	3A
     97	0001016A			 label sInfoD byte
     98
     99	0001016A			 dataseg
    100	0001016A  20 6F	70 65 6E 69 6E+	 sTest0	db ' opening stream.raw',13,10
    101		  67 20	73 74 72 65 61+
    102		  6D 2E	72 61 77 0D 0A
    103	0001017F  20 63	6C 6F 73 69 6E+	 sTest1	db ' closing stream.raw',13,10
    104		  67 20	73 74 72 65 61+
    105		  6D 2E	72 61 77 0D 0A
    106	00010194			 label sTest2 byte
    107
    108	00010194			 udataseg
    109	00000000  ????????		 ActionTaken dd	?
    110	00000004  ????????		 BytesDone dd ?
    111	00000008  ????????		 fhDevice dd ?
    112	0000000C  ????????		 fhOutput dd ?
    113
    114	00000010			 udataseg
Turbo Assembler	 Version 4.1	    12-10-13 18:38:54	    Page 3
stream.asm



    115	00000010  02*(????????)		 GetConfigDescriptor dd	2 dup(?)
    116	00000018  2000*(??)		 ConfigDescriptor db 8192 dup(?)
    117
    118	00002018			 dataseg
    119	00010194  00 09	01 00 00 00 00+	 SetConfiguration db 00h,09h,01h,00h,00h,00h,00h,00h
    120		  00
    121
    122	0001019C			 dataseg
    123	0001019C  01 0B	00 00 00 00 00+	 SetInterface db 01h,0Bh,00h,00h,00h,00h,00h,00h
    124		  00
    125
    126	000101A4			 dataseg
    127					 ; parameter buffer
    128	000101A4  00000000		 IsoParm dd 0 ;	hEventSem
    129	000101A8  00			   db 00h ; bEndpointAddress
    130	000101A9  00			   db 00h ; bAlternateSetting
    131	000101AA  0000			   dw 0000h ; wIsoFrameLength
    132	000101AC  5555			   dw iSize ; wIsoBufferLength
    133	000101AE  0003			   dw iUsed ; wIsoBufferCount
    134	000101B0  0000			   dw fUsed ; wIsoFrameCount
    135
    136	000101B2			 udataseg
    137	00002018  ????????		 wIsoFrameLength dd ?
    138
    139	0000201C			 dataseg
    140	000101B2  00000003		 IsoFree dd iUsed
    141	000101B6  00000000r		 IsoThis dd offset(IsoData)
    142
    143	000101BA			 udataseg
    144	0000201C  ????????		 DataLen dd ?
    145	00002020  ????????		 IsoPost dd ?
    146	00002024  ????????		 ParmLen dd ?
    147
    148	00002028			 codeseg
    149	00000000			 proc MainRoutine c near
    150					 arg @@Mod,@@Nul,@@Env,@@Arg
    151					 ; determine begin of arguments
1   152	00000000  C8 0000 00			 ENTERD	 00000h,0
1   153	00000004  FC			   cld ; operate foreward scan
    154	00000005  B9 00000200		   mov ecx,512 ; max scan length
    155	0000000A  8B 7D	14		   mov edi,[@@Arg] ; start address
    156	0000000D  F2> AE		   repne scasb ; find terminator
    157					 ; process passed arguments
    158	0000000F  E8 000006B7		   call	ProcessArguments
    159					 ; show	application started message
    160					   call	DosWrite c,1,offset(sGood0),sGood1-sGood0,offset(BytesDone)
1   161	00000014  68 00000004r			 PUSH	 OFFSET(BYTESDONE)
1   162	00000019  6A 0A				 PUSH	 SGOOD1-SGOOD0
1   163	0000001B  68 00010019r			 PUSH	 OFFSET(SGOOD0)
1   164	00000020  6A 01				 PUSH	 1
1   165	00000022  E8 00000000e			 CALL	 DOSWRITE
1   166	00000027  83 C4	10			 ADD	 ESP,00010h
    167					 ; open	raw iso	data output file
    168					   call	DosWrite c,1,offset(sTest0),sTest1-sTest0,offset(BytesDone)
1   169	0000002A  68 00000004r			 PUSH	 OFFSET(BYTESDONE)
1   170	0000002F  6A 15				 PUSH	 STEST1-STEST0
1   171	00000031  68 0001016Ar			 PUSH	 OFFSET(STEST0)
Turbo Assembler	 Version 4.1	    12-10-13 18:38:54	    Page 4
stream.asm



1   172	00000036  6A 01				 PUSH	 1
1   173	00000038  E8 00000000e			 CALL	 DOSWRITE
1   174	0000003D  83 C4	10			 ADD	 ESP,00010h
    175					   call	DosOpen	c,offset(szOutput),offset(fhOutput),offset(ActionTaken),0,0,012h,0191h,0
1   176	00000040  6A 00				 PUSH	 0
1   177	00000042  68 00000191			 PUSH	 0191H
1   178	00000047  6A 12				 PUSH	 012H
1   179	00000049  6A 00				 PUSH	 0
1   180	0000004B  6A 00				 PUSH	 0
1   181	0000004D  68 00000000r			 PUSH	 OFFSET(ACTIONTAKEN)
1   182	00000052  68 0000000Cr			 PUSH	 OFFSET(FHOUTPUT)
1   183	00000057  68 0001000Er			 PUSH	 OFFSET(SZOUTPUT)
1   184	0000005C  E8 00000000e			 CALL	 DOSOPEN
1   185	00000061  83 C4	20			 ADD	 ESP,00020h
    186	00000064  E8 000006C9		   call	ShowReturnCode
    187	00000069  0F 85	000002EB	   jnz BadRawOpenAttempt
    188					 ; open	usb stream device driver
    189					   call	DosWrite c,1,offset(sInfo0),sInfo1-sInfo0,offset(BytesDone)
1   190	0000006F  68 00000004r			 PUSH	 OFFSET(BYTESDONE)
1   191	00000074  6A 15				 PUSH	 SINFO1-SINFO0
1   192	00000076  68 00010053r			 PUSH	 OFFSET(SINFO0)
1   193	0000007B  6A 01				 PUSH	 1
1   194	0000007D  E8 00000000e			 CALL	 DOSWRITE
1   195	00000082  83 C4	10			 ADD	 ESP,00010h
    196					   call	DosOpen	c,offset(szDevice),offset(fhDevice),offset(ActionTaken),0,0,1,18,0
1   197	00000085  6A 00				 PUSH	 0
1   198	00000087  6A 12				 PUSH	 18
1   199	00000089  6A 01				 PUSH	 1
1   200	0000008B  6A 00				 PUSH	 0
1   201	0000008D  6A 00				 PUSH	 0
1   202	0000008F  68 00000000r			 PUSH	 OFFSET(ACTIONTAKEN)
1   203	00000094  68 00000008r			 PUSH	 OFFSET(FHDEVICE)
1   204	00000099  68 00010000r			 PUSH	 OFFSET(SZDEVICE)
1   205	0000009E  E8 00000000e			 CALL	 DOSOPEN
1   206	000000A3  83 C4	20			 ADD	 ESP,00020h
    207	000000A6  E8 00000687		   call	ShowReturnCode
    208	000000AB  0F 85	00000280	   jnz BadDosOpenAttempt
    209					 ; obtain 1st configuration descriptor
    210	000000B1  C7 05	00000010r     +	   mov [GetConfigDescriptor+0],02000680h
    211		  02000680
    212	000000BB  C7 05	00000014r     +	   mov [GetConfigDescriptor+4],20000000h
    213		  20000000
    214					   call	DosWrite c,[fhDevice],offset(GetConfigDescriptor),8192+8,offset(BytesDone)
1   215	000000C5  68 00000004r			 PUSH	 OFFSET(BYTESDONE)
1   216	000000CA  68 00002008			 PUSH	 8192+8
1   217	000000CF  68 00000010r			 PUSH	 OFFSET(GETCONFIGDESCRIPTOR)
1   218	000000D4  FF 35	00000008r		 PUSH	 [FHDEVICE]
1   219	000000DA  E8 00000000e			 CALL	 DOSWRITE
1   220	000000DF  83 C4	10			 ADD	 ESP,00010h
    221	000000E2  E8 0000064B		   call	ShowReturnCode
    222	000000E7  0F 85	0000021B	   jnz NotIsoOpenAttempt
    223					 ; fix isochronous open	arguments
    224	000000ED  BE 00000018r		   mov esi,offset(ConfigDescriptor)
    225					 ; get total descriptor	size
    226	000000F2  0F B7	5E 02		   movzx ebx,[word(esi+2)]
    227	000000F6			 label NextDescriptor near
    228					 ; point to next descriptor
Turbo Assembler	 Version 4.1	    12-10-13 18:38:54	    Page 5
stream.asm



    229	000000F6  25 000000FF		   and eax,0FFh	; length
    230	000000FB  03 F0			   add esi,eax ; next
    231	000000FD  2B D8			   sub ebx,eax ; next
    232	000000FF  0F 86	00000203	   jna NotIsoOpenAttempt
    233	00000105			 label ScanDescriptors near
    234					 ; find	interface descriptor
    235	00000105  8B 06			   mov eax,[esi] ; start
    236	00000107  80 FC	04		   cmp ah,4 ; interface
    237	0000010A  75 EA			   jne NextDescriptor
    238					 ; check interface descriptor
    239	0000010C  8B 4E	02		   mov ecx,[esi+2] ; values
    240					 ; verify bInterfaceNumber
    241	0000010F  3A 0D	000101A0r	   cmp cl,[SetInterface+4]
    242	00000115  75 DF			   jne NextDescriptor
    243					 ; verify bAlternateSetting
    244	00000117  3A 2D	0001019Er	   cmp ch,[SetInterface+2]
    245	0000011D  75 D7			   jne NextDescriptor
    246					 ; show	matched	descriptor
    247					   call	DosWrite c,1,offset(sInfoA),sInfoB-sInfoA,offset(BytesDone)
1   248	0000011F  68 00000004r			 PUSH	 OFFSET(BYTESDONE)
1   249	00000124  6A 0C				 PUSH	 SINFOB-SINFOA
1   250	00000126  68 00010148r			 PUSH	 OFFSET(SINFOA)
1   251	0000012B  6A 01				 PUSH	 1
1   252	0000012D  E8 00000000e			 CALL	 DOSWRITE
1   253	00000132  83 C4	10			 ADD	 ESP,00010h
    254	00000135  8B 06			   mov eax,[esi] ; start
    255	00000137  0F C8			   bswap eax ; reorder
    256	00000139  E8 000005F4		   call	ShowReturnCode
    257	0000013E  0F C8			   bswap eax ; restore
    258	00000140			 label ScanInterface near
    259					 ; point to next descriptor
    260	00000140  25 000000FF		   and eax,0FFh	; length
    261	00000145  03 F0			   add esi,eax ; next
    262	00000147  2B D8			   sub ebx,eax ; next
    263	00000149  0F 86	000001B9	   jna NotIsoOpenAttempt
    264					 ; find	endpoint descriptor
    265	0000014F  8B 06			   mov eax,[esi] ; start
    266	00000151  80 FC	05		   cmp ah,5 ; endpoint
    267	00000154  75 EA			   jne ScanInterface
    268					 ; check endpoint descriptor
    269	00000156  8B 4E	02		   mov ecx,[esi+2] ; values
    270					 ; verify bEndpointAddress
    271	00000159  3A 0D	000101A8r	   cmp cl,[byte(IsoParm+4)]
    272	0000015F  75 DF			   jne ScanInterface
    273					 ; verify bmAttributes
    274	00000161  80 E5	F3		   and ch,0F3h ; synctype
    275	00000164  80 FD	01		   cmp ch,1 ; isochronous
    276	00000167  75 D7			   jne ScanInterface
    277					 ; override wMaxPacketSize
    278	00000169  C1 E9	10		   shr ecx,16 ;	wMaxPacketSize
    279	0000016C  66| 89 0D 000101AAr	   mov [word(IsoParm+6)],cx
    280					 ; calculate wIsoFrameLength
    281	00000173  8B C1			   mov eax,ecx ; wMaxPacketSize
    282	00000175  80 E4	07		   and ah,07h ;	wIsoFrameLength
    283	00000178  A3 00002018r		   mov [wIsoFrameLength],eax
    284	0000017D  80 E5	18		   and ch,18h ;	multiplier
    285	00000180  C0 ED	03		   shr ch,03h ;	position
Turbo Assembler	 Version 4.1	    12-10-13 18:38:54	    Page 6
stream.asm



    286	00000183  80 FD	03		   cmp ch,03h ;	invalid
    287	00000186  74 0F			   je EndMultiplier
    288	00000188  80 FD	01		   cmp ch,01h ;	twice
    289	0000018B  72 0A			   jb EndMultiplier
    290	0000018D  74 02			   je AddMultiplier
    291	0000018F  03 C0			   add eax,eax ; twice
    292	00000191			 label AddMultiplier near
    293	00000191  01 05	00002018r	   add [wIsoFrameLength],eax
    294	00000197			 label EndMultiplier near
    295					 ; show	matched	descriptor
    296					   call	DosWrite c,1,offset(sInfoA),sInfoB-sInfoA,offset(BytesDone)
1   297	00000197  68 00000004r			 PUSH	 OFFSET(BYTESDONE)
1   298	0000019C  6A 0C				 PUSH	 SINFOB-SINFOA
1   299	0000019E  68 00010148r			 PUSH	 OFFSET(SINFOA)
1   300	000001A3  6A 01				 PUSH	 1
1   301	000001A5  E8 00000000e			 CALL	 DOSWRITE
1   302	000001AA  83 C4	10			 ADD	 ESP,00010h
    303	000001AD  8B 06			   mov eax,[esi] ; start
    304	000001AF  0F C8			   bswap eax ; reorder
    305	000001B1  E8 0000057C		   call	ShowReturnCode
    306					 ; show	current	parameters
    307					   call	DosWrite c,1,offset(sInfoB),sInfoC-sInfoB,offset(BytesDone)
1   308	000001B6  68 00000004r			 PUSH	 OFFSET(BYTESDONE)
1   309	000001BB  6A 0C				 PUSH	 SINFOC-SINFOB
1   310	000001BD  68 00010154r			 PUSH	 OFFSET(SINFOB)
1   311	000001C2  6A 01				 PUSH	 1
1   312	000001C4  E8 00000000e			 CALL	 DOSWRITE
1   313	000001C9  83 C4	10			 ADD	 ESP,00010h
    314	000001CC  A1 000101A8r		   mov eax,[IsoParm+4]
    315	000001D1  E8 0000055C		   call	ShowReturnCode
    316					 ; set configuration request
    317					   call	DosWrite c,1,offset(sInfo1),sInfo2-sInfo1,offset(BytesDone)
1   318	000001D6  68 00000004r			 PUSH	 OFFSET(BYTESDONE)
1   319	000001DB  6A 18				 PUSH	 SINFO2-SINFO1
1   320	000001DD  68 00010068r			 PUSH	 OFFSET(SINFO1)
1   321	000001E2  6A 01				 PUSH	 1
1   322	000001E4  E8 00000000e			 CALL	 DOSWRITE
1   323	000001E9  83 C4	10			 ADD	 ESP,00010h
    324					   call	DosWrite c,[fhDevice],offset(SetConfiguration),8,offset(BytesDone)
1   325	000001EC  68 00000004r			 PUSH	 OFFSET(BYTESDONE)
1   326	000001F1  6A 08				 PUSH	 8
1   327	000001F3  68 00010194r			 PUSH	 OFFSET(SETCONFIGURATION)
1   328	000001F8  FF 35	00000008r		 PUSH	 [FHDEVICE]
1   329	000001FE  E8 00000000e			 CALL	 DOSWRITE
1   330	00000203  83 C4	10			 ADD	 ESP,00010h
    331	00000206  E8 00000527		   call	ShowReturnCode
    332	0000020B  0F 85	000000F7	   jnz NotIsoOpenAttempt
    333					 ; setup alternative interface request
    334					   call	DosWrite c,1,offset(sInfo2),sInfo3-sInfo2,offset(BytesDone)
1   335	00000211  68 00000004r			 PUSH	 OFFSET(BYTESDONE)
1   336	00000216  6A 1E				 PUSH	 SINFO3-SINFO2
1   337	00000218  68 00010080r			 PUSH	 OFFSET(SINFO2)
1   338	0000021D  6A 01				 PUSH	 1
1   339	0000021F  E8 00000000e			 CALL	 DOSWRITE
1   340	00000224  83 C4	10			 ADD	 ESP,00010h
    341					   call	DosWrite c,[fhDevice],offset(SetInterface),8,offset(BytesDone)
1   342	00000227  68 00000004r			 PUSH	 OFFSET(BYTESDONE)
Turbo Assembler	 Version 4.1	    12-10-13 18:38:54	    Page 7
stream.asm



1   343	0000022C  6A 08				 PUSH	 8
1   344	0000022E  68 0001019Cr			 PUSH	 OFFSET(SETINTERFACE)
1   345	00000233  FF 35	00000008r		 PUSH	 [FHDEVICE]
1   346	00000239  E8 00000000e			 CALL	 DOSWRITE
1   347	0000023E  83 C4	10			 ADD	 ESP,00010h
    348	00000241  E8 000004EC		   call	ShowReturnCode
    349	00000246  0F 85	000000BC	   jnz NotIsoOpenAttempt
    350					 ; create isochronous event semaphore
    351					   call	DosWrite c,1,offset(sInfo3),sInfo4-sInfo3,offset(BytesDone)
1   352	0000024C  68 00000004r			 PUSH	 OFFSET(BYTESDONE)
1   353	00000251  6A 1B				 PUSH	 SINFO4-SINFO3
1   354	00000253  68 0001009Er			 PUSH	 OFFSET(SINFO3)
1   355	00000258  6A 01				 PUSH	 1
1   356	0000025A  E8 00000000e			 CALL	 DOSWRITE
1   357	0000025F  83 C4	10			 ADD	 ESP,00010h
    358					   call	DosCreateEventSem c,0,offset(IsoParm),1,0
1   359	00000262  6A 00				 PUSH	 0
1   360	00000264  6A 01				 PUSH	 1
1   361	00000266  68 000101A4r			 PUSH	 OFFSET(ISOPARM)
1   362	0000026B  6A 00				 PUSH	 0
1   363	0000026D  E8 00000000e			 CALL	 DOSCREATEEVENTSEM
1   364	00000272  83 C4	10			 ADD	 ESP,00010h
    365	00000275  E8 000004B8		   call	ShowReturnCode
    366	0000027A  0F 85	00000088	   jnz NotIsoOpenAttempt
    367					 ; register termination	processing
    368					   call	DosExitList c,1,offset(ProcessComplete)
1   369	00000280  68 0000037Cr			 PUSH	 OFFSET(PROCESSCOMPLETE)
1   370	00000285  6A 01				 PUSH	 1
1   371	00000287  E8 00000000e			 CALL	 DOSEXITLIST
1   372	0000028C  83 C4	08			 ADD	 ESP,00008h
    373					 ; open	isochronous transfer
    374					   call	DosWrite c,1,offset(sInfo4),sInfo5-sInfo4,offset(BytesDone)
1   375	0000028F  68 00000004r			 PUSH	 OFFSET(BYTESDONE)
1   376	00000294  6A 16				 PUSH	 SINFO5-SINFO4
1   377	00000296  68 000100B9r			 PUSH	 OFFSET(SINFO4)
1   378	0000029B  6A 01				 PUSH	 1
1   379	0000029D  E8 00000000e			 CALL	 DOSWRITE
1   380	000002A2  83 C4	10			 ADD	 ESP,00010h
    381					   call	DosDevIOCtl c,[fhDevice],0ECh,040h,offset(IsoParm),14,offset(ParmLen),offset	    +
    382					 (IsoData),tSize,offset(DataLen)
1   383	000002A5  68 0000201Cr			 PUSH	 OFFSET(DATALEN)
1   384	000002AA  68 0000FFFF			 PUSH	 TSIZE
1   385	000002AF  68 00000000r			 PUSH	 OFFSET(ISODATA)
1   386	000002B4  68 00002024r			 PUSH	 OFFSET(PARMLEN)
1   387	000002B9  6A 0E				 PUSH	 14
1   388	000002BB  68 000101A4r			 PUSH	 OFFSET(ISOPARM)
1   389	000002C0  6A 40				 PUSH	 040H
1   390	000002C2  68 000000EC			 PUSH	 0ECH
1   391	000002C7  FF 35	00000008r		 PUSH	 [FHDEVICE]
1   392	000002CD  E8 00000000e			 CALL	 DOSDEVIOCTL
1   393	000002D2  83 C4	24			 ADD	 ESP,00024h
    394	000002D5  E8 00000458		   call	ShowReturnCode
    395	000002DA  75 28			   jnz EndProcess
    396					 ; show	application waiting message
    397					   call	DosWrite c,1,offset(sGood2),sGood3-sGood2,offset(BytesDone)
1   398	000002DC  68 00000004r			 PUSH	 OFFSET(BYTESDONE)
1   399	000002E1  6A 0C				 PUSH	 SGOOD3-SGOOD2
Turbo Assembler	 Version 4.1	    12-10-13 18:38:54	    Page 8
stream.asm



1   400	000002E3  68 0001002Dr			 PUSH	 OFFSET(SGOOD2)
1   401	000002E8  6A 01				 PUSH	 1
1   402	000002EA  E8 00000000e			 CALL	 DOSWRITE
1   403	000002EF  83 C4	10			 ADD	 ESP,00010h
    404					 ; hang	in here	for 3 seconds
    405					   call	DosSleep c,3000
1   406	000002F2  68 00000BB8			 PUSH	 3000
1   407	000002F7  E8 00000000e			 CALL	 DOSSLEEP
1   408	000002FC  83 C4	04			 ADD	 ESP,00004h
    409					 ; process iso buffers
    410	000002FF  E8 000001A7		   call	ProcessIsoStream
    411	00000304			 label EndProcess near
    412					 ; force process complete
    413	00000304  2B C0			   sub eax,eax ; success
1   414	00000306  C9				 LEAVED
1   415	00000307  C3				 RET	 00000h
    416	00000308			 label NotIsoOpenAttempt near
    417					 ; close usb stream device driver
    418					   call	DosWrite c,1,offset(sInfo9),sInfoA-sInfo9,offset(BytesDone)
1   419	00000308  68 00000004r			 PUSH	 OFFSET(BYTESDONE)
1   420	0000030D  6A 15				 PUSH	 SINFOA-SINFO9
1   421	0000030F  68 00010133r			 PUSH	 OFFSET(SINFO9)
1   422	00000314  6A 01				 PUSH	 1
1   423	00000316  E8 00000000e			 CALL	 DOSWRITE
1   424	0000031B  83 C4	10			 ADD	 ESP,00010h
    425					   call	DosClose c,[fhDevice]
1   426	0000031E  FF 35	00000008r		 PUSH	 [FHDEVICE]
1   427	00000324  E8 00000000e			 CALL	 DOSCLOSE
1   428	00000329  83 C4	04			 ADD	 ESP,00004h
    429	0000032C  E8 00000401		   call	ShowReturnCode
    430	00000331			 label BadDosOpenAttempt near
    431					 ; close raw iso data output file
    432					   call	DosWrite c,1,offset(sTest1),sTest2-sTest1,offset(BytesDone)
1   433	00000331  68 00000004r			 PUSH	 OFFSET(BYTESDONE)
1   434	00000336  6A 15				 PUSH	 STEST2-STEST1
1   435	00000338  68 0001017Fr			 PUSH	 OFFSET(STEST1)
1   436	0000033D  6A 01				 PUSH	 1
1   437	0000033F  E8 00000000e			 CALL	 DOSWRITE
1   438	00000344  83 C4	10			 ADD	 ESP,00010h
    439					   call	DosClose c,[fhOutput]
1   440	00000347  FF 35	0000000Cr		 PUSH	 [FHOUTPUT]
1   441	0000034D  E8 00000000e			 CALL	 DOSCLOSE
1   442	00000352  83 C4	04			 ADD	 ESP,00004h
    443	00000355  E8 000003D8		   call	ShowReturnCode
    444	0000035A			 label BadRawOpenAttempt near
    445					 ; show	application stopped message
    446					   call	DosWrite c,1,offset(sGood1),10,offset(BytesDone)
1   447	0000035A  68 00000004r			 PUSH	 OFFSET(BYTESDONE)
1   448	0000035F  6A 0A				 PUSH	 10
1   449	00000361  68 00010023r			 PUSH	 OFFSET(SGOOD1)
1   450	00000366  6A 01				 PUSH	 1
1   451	00000368  E8 00000000e			 CALL	 DOSWRITE
1   452	0000036D  83 C4	10			 ADD	 ESP,00010h
    453					 ; exit	the process
    454					   call	DosExit	c,1,0
1   455	00000370  6A 00				 PUSH	 0
1   456	00000372  6A 01				 PUSH	 1
Turbo Assembler	 Version 4.1	    12-10-13 18:38:54	    Page 9
stream.asm



1   457	00000374  E8 00000000e			 CALL	 DOSEXIT
1   458	00000379  83 C4	08			 ADD	 ESP,00008h
    459	0000037C			 endp MainRoutine
    460
    461	0000037C			 codeseg
    462	0000037C			 proc ProcessComplete c	near
    463					 arg @@ReasonCode
    464					 ; show	application quitting message
1   465	0000037C  C8 0000 00			 ENTERD	 00000h,0
1   466					   call	DosWrite c,1,offset(sGood4),sGood5-sGood4,offset(BytesDone)
2   467	00000380  68 00000004r			 PUSH	 OFFSET(BYTESDONE)
2   468	00000385  6A 0D				 PUSH	 SGOOD5-SGOOD4
2   469	00000387  68 00010046r			 PUSH	 OFFSET(SGOOD4)
2   470	0000038C  6A 01				 PUSH	 1
2   471	0000038E  E8 00000000e			 CALL	 DOSWRITE
2   472	00000393  83 C4	10			 ADD	 ESP,00010h
    473					 ; report reason code
    474					 ; mov eax,[@@ReasonCode]
    475					 ; call	ShowReturnCode
    476					 ; close isochronous transfer
    477					   call	DosWrite c,1,offset(sInfo6),sInfo7-sInfo6,offset(BytesDone)
1   478	00000396  68 00000004r			 PUSH	 OFFSET(BYTESDONE)
1   479	0000039B  6A 16				 PUSH	 SINFO7-SINFO6
1   480	0000039D  68 000100E5r			 PUSH	 OFFSET(SINFO6)
1   481	000003A2  6A 01				 PUSH	 1
1   482	000003A4  E8 00000000e			 CALL	 DOSWRITE
1   483	000003A9  83 C4	10			 ADD	 ESP,00010h
    484					   call	DosDevIOCtl c,[fhDevice],0ECh,041h,0,0,0,0,0,0
1   485	000003AC  6A 00				 PUSH	 0
1   486	000003AE  6A 00				 PUSH	 0
1   487	000003B0  6A 00				 PUSH	 0
1   488	000003B2  6A 00				 PUSH	 0
1   489	000003B4  6A 00				 PUSH	 0
1   490	000003B6  6A 00				 PUSH	 0
1   491	000003B8  6A 41				 PUSH	 041H
1   492	000003BA  68 000000EC			 PUSH	 0ECH
1   493	000003BF  FF 35	00000008r		 PUSH	 [FHDEVICE]
1   494	000003C5  E8 00000000e			 CALL	 DOSDEVIOCTL
1   495	000003CA  83 C4	24			 ADD	 ESP,00024h
    496	000003CD  E8 00000360		   call	ShowReturnCode
    497					 ; close isochronous event semaphore
    498					   call	DosWrite c,1,offset(sInfo7),sInfo8-sInfo7,offset(BytesDone)
1   499	000003D2  68 00000004r			 PUSH	 OFFSET(BYTESDONE)
1   500	000003D7  6A 1A				 PUSH	 SINFO8-SINFO7
1   501	000003D9  68 000100FBr			 PUSH	 OFFSET(SINFO7)
1   502	000003DE  6A 01				 PUSH	 1
1   503	000003E0  E8 00000000e			 CALL	 DOSWRITE
1   504	000003E5  83 C4	10			 ADD	 ESP,00010h
    505					   call	DosCloseEventSem c,[IsoParm]
1   506	000003E8  FF 35	000101A4r		 PUSH	 [ISOPARM]
1   507	000003EE  E8 00000000e			 CALL	 DOSCLOSEEVENTSEM
1   508	000003F3  83 C4	04			 ADD	 ESP,00004h
    509	000003F6  E8 00000337		   call	ShowReturnCode
    510					 ; reset alternative interface request
    511	000003FB  C6 05	0001019Er 00	   mov [SetInterface+2],0 ; zero bandwidth
    512					   call	DosWrite c,1,offset(sInfo8),sInfo9-sInfo8,offset(BytesDone)
1   513	00000402  68 00000004r			 PUSH	 OFFSET(BYTESDONE)
Turbo Assembler	 Version 4.1	    12-10-13 18:38:54	    Page 10
stream.asm



1   514	00000407  6A 1E				 PUSH	 SINFO9-SINFO8
1   515	00000409  68 00010115r			 PUSH	 OFFSET(SINFO8)
1   516	0000040E  6A 01				 PUSH	 1
1   517	00000410  E8 00000000e			 CALL	 DOSWRITE
1   518	00000415  83 C4	10			 ADD	 ESP,00010h
    519					   call	DosWrite c,[fhDevice],offset(SetInterface),8,offset(BytesDone)
1   520	00000418  68 00000004r			 PUSH	 OFFSET(BYTESDONE)
1   521	0000041D  6A 08				 PUSH	 8
1   522	0000041F  68 0001019Cr			 PUSH	 OFFSET(SETINTERFACE)
1   523	00000424  FF 35	00000008r		 PUSH	 [FHDEVICE]
1   524	0000042A  E8 00000000e			 CALL	 DOSWRITE
1   525	0000042F  83 C4	10			 ADD	 ESP,00010h
    526	00000432  E8 000002FB		   call	ShowReturnCode
    527					 ; close usb stream device driver
    528					   call	DosWrite c,1,offset(sInfo9),sInfoA-sInfo9,offset(BytesDone)
1   529	00000437  68 00000004r			 PUSH	 OFFSET(BYTESDONE)
1   530	0000043C  6A 15				 PUSH	 SINFOA-SINFO9
1   531	0000043E  68 00010133r			 PUSH	 OFFSET(SINFO9)
1   532	00000443  6A 01				 PUSH	 1
1   533	00000445  E8 00000000e			 CALL	 DOSWRITE
1   534	0000044A  83 C4	10			 ADD	 ESP,00010h
    535					   call	DosClose c,[fhDevice]
1   536	0000044D  FF 35	00000008r		 PUSH	 [FHDEVICE]
1   537	00000453  E8 00000000e			 CALL	 DOSCLOSE
1   538	00000458  83 C4	04			 ADD	 ESP,00004h
    539	0000045B  E8 000002D2		   call	ShowReturnCode
    540					 ; close raw iso data output file
    541					   call	DosWrite c,1,offset(sTest1),sTest2-sTest1,offset(BytesDone)
1   542	00000460  68 00000004r			 PUSH	 OFFSET(BYTESDONE)
1   543	00000465  6A 15				 PUSH	 STEST2-STEST1
1   544	00000467  68 0001017Fr			 PUSH	 OFFSET(STEST1)
1   545	0000046C  6A 01				 PUSH	 1
1   546	0000046E  E8 00000000e			 CALL	 DOSWRITE
1   547	00000473  83 C4	10			 ADD	 ESP,00010h
    548					   call	DosClose c,[fhOutput]
1   549	00000476  FF 35	0000000Cr		 PUSH	 [FHOUTPUT]
1   550	0000047C  E8 00000000e			 CALL	 DOSCLOSE
1   551	00000481  83 C4	04			 ADD	 ESP,00004h
    552	00000484  E8 000002A9		   call	ShowReturnCode
    553					 ; show	application stopped message
    554					   call	DosWrite c,1,offset(sGood1),10,offset(BytesDone)
1   555	00000489  68 00000004r			 PUSH	 OFFSET(BYTESDONE)
1   556	0000048E  6A 0A				 PUSH	 10
1   557	00000490  68 00010023r			 PUSH	 OFFSET(SGOOD1)
1   558	00000495  6A 01				 PUSH	 1
1   559	00000497  E8 00000000e			 CALL	 DOSWRITE
1   560	0000049C  83 C4	10			 ADD	 ESP,00010h
    561					 ; exit	termination process
    562					   call	DosExitList c,3,0)
1   563	0000049F  6A 00				 PUSH	 0
1   564	000004A1  6A 03				 PUSH	 3
1   565	000004A3  E8 00000000e			 CALL	 DOSEXITLIST
1   566	000004A8  83 C4	08			 ADD	 ESP,00008h
    567	000004AB			 endp ProcessComplete
    568
    569	000004AB			 dataseg
    570	000101BA  00000000		 RawBytesDone dd 0
Turbo Assembler	 Version 4.1	    12-10-13 18:38:54	    Page 11
stream.asm



    571
    572	000101BE			 codeseg
    573	000004AB			 proc ProcessIsoStream near
    574					 ; set time critical priority
    575					 ; call	DosSetPriority c,2,3,31,0
    576					 ; prepare for frame size arrays
    577	000004AB  BF 00005551r		   mov edi,offset(IsoData+iSize-4)
    578	000004B0			 label QueueEmptyIsoBuffers near
    579					 ; initialize frame size array
    580	000004B0  0F B7	0D 000101B0r	   movzx ecx,[word(IsoParm+12)]
    581	000004B7  85 C9			   test	ecx,ecx	; wIsoFrameCount
    582	000004B9  74 12			   jz EndSetFrameSizeArray
    583	000004BB  A1 00002018r		   mov eax,[wIsoFrameLength]
    584	000004C0  2B F9			   sub edi,ecx ; wIsoFrameCount
    585	000004C2  2B F9			   sub edi,ecx ; wIsoFrameCount
    586	000004C4  F3> 66| AB		   rep stosw ; wIsoFrameLength
    587	000004C7  81 C7	00005555	   add edi,iSize ; bump	pointer
    588	000004CD			 label EndSetFrameSizeArray near
    589					 ; queue empty isochronous buffers
    590					   call	DosWrite c,1,offset(sInfo5),sInfo6-sInfo5,offset(BytesDone)
1   591	000004CD  68 00000004r			 PUSH	 OFFSET(BYTESDONE)
1   592	000004D2  6A 16				 PUSH	 SINFO6-SINFO5
1   593	000004D4  68 000100CFr			 PUSH	 OFFSET(SINFO5)
1   594	000004D9  6A 01				 PUSH	 1
1   595	000004DB  E8 00000000e			 CALL	 DOSWRITE
1   596	000004E0  83 C4	10			 ADD	 ESP,00010h
    597					   call	DosDevIOCtl c,[fhDevice],0ECh,042h,0,0,0,0,0,0
1   598	000004E3  6A 00				 PUSH	 0
1   599	000004E5  6A 00				 PUSH	 0
1   600	000004E7  6A 00				 PUSH	 0
1   601	000004E9  6A 00				 PUSH	 0
1   602	000004EB  6A 00				 PUSH	 0
1   603	000004ED  6A 00				 PUSH	 0
1   604	000004EF  6A 42				 PUSH	 042H
1   605	000004F1  68 000000EC			 PUSH	 0ECH
1   606	000004F6  FF 35	00000008r		 PUSH	 [FHDEVICE]
1   607	000004FC  E8 00000000e			 CALL	 DOSDEVIOCTL
1   608	00000501  83 C4	24			 ADD	 ESP,00024h
    609	00000504  E8 00000229		   call	ShowReturnCode
    610	00000509  FF 0D	000101B2r	   dec [IsoFree] ; count
    611	0000050F  75 9F			   jnz QueueEmptyIsoBuffers
    612	00000511			 label AwaitFilledIsoBuffers near
    613					 ; await filled	isochronous buffers
    614					   call	DosWrite c,1,offset(sGood3),sGood4-sGood3,offset(BytesDone)
1   615	00000511  68 00000004r			 PUSH	 OFFSET(BYTESDONE)
1   616	00000516  6A 0D				 PUSH	 SGOOD4-SGOOD3
1   617	00000518  68 00010039r			 PUSH	 OFFSET(SGOOD3)
1   618	0000051D  6A 01				 PUSH	 1
1   619	0000051F  E8 00000000e			 CALL	 DOSWRITE
1   620	00000524  83 C4	10			 ADD	 ESP,00010h
    621					   call	DosWaitEventSem	c,[IsoParm],-1
1   622	00000527  6A FF				 PUSH	 -1
1   623	00000529  FF 35	000101A4r		 PUSH	 [ISOPARM]
1   624	0000052F  E8 00000000e			 CALL	 DOSWAITEVENTSEM
1   625	00000534  83 C4	08			 ADD	 ESP,00008h
    626	00000537  E8 000001F6		   call	ShowReturnCode
    627					 ; update filled isochronous buffers
Turbo Assembler	 Version 4.1	    12-10-13 18:38:54	    Page 12
stream.asm



    628					   call	DosResetEventSem c,[IsoParm],offset(IsoPost)
1   629	0000053C  68 00002020r			 PUSH	 OFFSET(ISOPOST)
1   630	00000541  FF 35	000101A4r		 PUSH	 [ISOPARM]
1   631	00000547  E8 00000000e			 CALL	 DOSRESETEVENTSEM
1   632	0000054C  83 C4	08			 ADD	 ESP,00008h
    633	0000054F  A1 00002020r		   mov eax,[IsoPost] ; additional
    634	00000554  01 05	000101B2r	   add [IsoFree],eax ; current
    635	0000055A			 label ProcessRawIsoData near
    636					 ; address current isochronous buffer
    637	0000055A  8B 35	000101B6r	   mov esi,[IsoThis] ; this buffer
    638					 ; show	actual completion lengths
    639					   call	DosWrite c,1,offset(sInfoC),sInfoD-sInfoC,offset(BytesDone)
1   640	00000560  68 00000004r			 PUSH	 OFFSET(BYTESDONE)
1   641	00000565  6A 0A				 PUSH	 SINFOD-SINFOC
1   642	00000567  68 00010160r			 PUSH	 OFFSET(SINFOC)
1   643	0000056C  6A 01				 PUSH	 1
1   644	0000056E  E8 00000000e			 CALL	 DOSWRITE
1   645	00000573  83 C4	10			 ADD	 ESP,00010h
    646	00000576  8B 86	00005551	   mov eax,[dword(esi+iSize-4)]
    647	0000057C  E8 000001B1		   call	ShowReturnCode
    648					 ; write current iso buffer
    649	00000581  0F B7	0D 000101B0r	   movzx ecx,[word(IsoParm+12)]
    650	00000588  85 C9			   test	ecx,ecx	; wIsoFrameCount
    651	0000058A  74 42			   jz WriteStreamDataBytes
    652					 ; get start of	frame size array
    653	0000058C  25 0000FFFF		   and eax,0FFFFh ; buffer1length
    654	00000591  8D 3C	06		   lea edi,[esi+eax] ; size array
    655	00000594  2B DB			   sub ebx,ebx ; 1st frame index
    656	00000596			 label WriteIsochronousFrame near
    657					 ; write to raw	iso data output	file
    658	00000596  0F B7	04 5F		   movzx eax,[word(edi+ebx*2)] ; size
    659	0000059A  01 05	000101BAr	   add [RawBytesDone],eax ; total
    660					   call	DosWrite c,[fhOutput],esi,eax,offset(BytesDone)
1   661	000005A0  68 00000004r			 PUSH	 OFFSET(BYTESDONE)
1   662	000005A5  50				 PUSH	 EAX
1   663	000005A6  56				 PUSH	 ESI
1   664	000005A7  FF 35	0000000Cr		 PUSH	 [FHOUTPUT]
1   665	000005AD  E8 00000000e			 CALL	 DOSWRITE
1   666	000005B2  83 C4	10			 ADD	 ESP,00010h
    667					 ; reset size to wIsoFrameLength
    668	000005B5  A1 00002018r		   mov eax,[wIsoFrameLength]
    669	000005BA  66| 89 04 5F		   mov [word(edi+ebx*2)],ax
    670					 ; loop	until all frames done
    671	000005BE  0F B7	0D 000101B0r	   movzx ecx,[word(IsoParm+12)]
    672	000005C5  43			   inc ebx ; next frame	index
    673	000005C6  3B D9			   cmp ebx,ecx ; wIsoFrameCount
    674	000005C8  73 22			   jnb QueueEmptyIsoBuffer ; done
    675	000005CA  03 F0			   add esi,eax ; wIsoFrameLength
    676	000005CC  EB C8			   jmp WriteIsochronousFrame
    677	000005CE			 label WriteStreamDataBytes near
    678					 ; write to raw	iso data output	file
    679	000005CE  C1 E8	10		   shr eax,16 ;	buffer2length
    680	000005D1  01 05	000101BAr	   add [RawBytesDone],eax ; total
    681					   call	DosWrite c,[fhOutput],esi,eax,offset(BytesDone)
1   682	000005D7  68 00000004r			 PUSH	 OFFSET(BYTESDONE)
1   683	000005DC  50				 PUSH	 EAX
1   684	000005DD  56				 PUSH	 ESI
Turbo Assembler	 Version 4.1	    12-10-13 18:38:54	    Page 13
stream.asm



1   685	000005DE  FF 35	0000000Cr		 PUSH	 [FHOUTPUT]
1   686	000005E4  E8 00000000e			 CALL	 DOSWRITE
1   687	000005E9  83 C4	10			 ADD	 ESP,00010h
    688	000005EC			 label QueueEmptyIsoBuffer near
    689					 ; queue empty isochronous buffer
    690					   call	DosWrite c,1,offset(sInfo5),sInfo6-sInfo5,offset(BytesDone)
1   691	000005EC  68 00000004r			 PUSH	 OFFSET(BYTESDONE)
1   692	000005F1  6A 16				 PUSH	 SINFO6-SINFO5
1   693	000005F3  68 000100CFr			 PUSH	 OFFSET(SINFO5)
1   694	000005F8  6A 01				 PUSH	 1
1   695	000005FA  E8 00000000e			 CALL	 DOSWRITE
1   696	000005FF  83 C4	10			 ADD	 ESP,00010h
    697					   call	DosDevIOCtl c,[fhDevice],0ECh,042h,0,0,0,0,0,0
1   698	00000602  6A 00				 PUSH	 0
1   699	00000604  6A 00				 PUSH	 0
1   700	00000606  6A 00				 PUSH	 0
1   701	00000608  6A 00				 PUSH	 0
1   702	0000060A  6A 00				 PUSH	 0
1   703	0000060C  6A 00				 PUSH	 0
1   704	0000060E  6A 42				 PUSH	 042H
1   705	00000610  68 000000EC			 PUSH	 0ECH
1   706	00000615  FF 35	00000008r		 PUSH	 [FHDEVICE]
1   707	0000061B  E8 00000000e			 CALL	 DOSDEVIOCTL
1   708	00000620  83 C4	24			 ADD	 ESP,00024h
    709	00000623  E8 0000010A		   call	ShowReturnCode
    710					 ; update next iso buffer pointer
    711	00000628  81 05	000101B6r     +	   add [IsoThis],iSize ; bump pointer
    712		  00005555
    713	00000632  81 3D	000101B6r     +	   cmp [IsoThis],offset(IsoData+tSize)
    714		  0000FFFFr
    715	0000063C  75 0A			   jne DecrementFreeBuffers ; proper
    716	0000063E  C7 05	000101B6r     +	   mov [IsoThis],offset(IsoData)
    717		  00000000r
    718	00000648			 label DecrementFreeBuffers near
    719	00000648  FF 0D	000101B2r	   dec [IsoFree] ; count
    720	0000064E  0F 85	FFFFFF06	   jnz ProcessRawIsoData
    721					 ; stop	with enough raw	data
    722	00000654  81 3D	000101BAr     +	   cmp [RawBytesDone],tSize*15
    723		  000EFFF1
    724	0000065E  0F 86	FFFFFEAD	   jna AwaitFilledIsoBuffers
    725	00000664  C3			   ret ; return
    726	00000665			 endp ProcessIsoStream
    727
    728	00000665			 codeseg
    729	00000665			 proc chr2ddn near
    730					 ; convert char	to ddname
    731	00000665  33 F6			   xor esi,esi ; first position
    732	00000667			 label UpdateDriverName	near
    733	00000667  47			   inc edi ; next position
    734	00000668  8A 07			   mov al,[edi]	; obtain
    735					 ; validate character
    736	0000066A  3C 21			   cmp al,"!" ;	control
    737	0000066C  72 34			   jb EndChr2ddn ; reject
    738	0000066E  3C 22			   cmp al,'"' ;	special
    739	00000670  74 30			   je EndChr2ddn ; reject
    740	00000672  3C 2A			   cmp al,"*" ;	special
    741	00000674  74 2C			   je EndChr2ddn ; reject
Turbo Assembler	 Version 4.1	    12-10-13 18:38:54	    Page 14
stream.asm



    742	00000676  3C 2E			   cmp al,"." ;	special
    743	00000678  74 28			   je EndChr2ddn ; reject
    744	0000067A  3C 2F			   cmp al,"/" ;	special
    745	0000067C  74 24			   je EndChr2ddn ; reject
    746	0000067E  3C 3A			   cmp al,":" ;	special
    747	00000680  74 20			   je EndChr2ddn ; reject
    748	00000682  3C 3C			   cmp al,"<" ;	special
    749	00000684  74 1C			   je EndChr2ddn ; reject
    750	00000686  3C 3E			   cmp al,">" ;	special
    751	00000688  74 18			   je EndChr2ddn ; reject
    752	0000068A  3C 3F			   cmp al,"?" ;	special
    753	0000068C  74 14			   je EndChr2ddn ; reject
    754	0000068E  3C 5C			   cmp al,"\" ;	special
    755	00000690  74 10			   je EndChr2ddn ; reject
    756	00000692  3C 7C			   cmp al,"|" ;	special
    757	00000694  74 0C			   je EndChr2ddn ; reject
    758					 ; update ddname character
    759	00000696  88 86	00010005r	   mov [szDriver+esi],al
    760	0000069C  46			   inc esi ; next position
    761	0000069D  83 FE	08		   cmp esi,8 ; maximum
    762	000006A0  72 C5			   jb UpdateDriverName
    763	000006A2			 label EndChr2ddn near
    764	000006A2  C3			   ret ; return
    765	000006A3			 endp chr2ddn
    766
    767	000006A3			 codeseg
    768	000006A3			 proc hex2bin near
    769					 ; convert hex to binary
    770	000006A3  2B D2			   sub edx,edx ; output
    771	000006A5			 label ConvertInput near
    772	000006A5  47			   inc edi ; next position
    773	000006A6  8A 07			   mov al,[edi]	; digit
    774					 ; convert decimal digit
    775	000006A8  3C 30			   cmp al,"0" ;	minimum
    776	000006AA  72 0D			   jb NotDecimal ; hex
    777	000006AC  3C 39			   cmp al,"9" ;	maximum
    778	000006AE  77 09			   ja NotDecimal ; hex
    779					 ; convert to binary
    780	000006B0  2C 30			   sub al,"0"-00h
    781	000006B2  C1 E2	04		   shl edx,4 ; output
    782	000006B5  32 D0			   xor dl,al ; insert
    783	000006B7  EB EC			   jmp ConvertInput
    784	000006B9			 label NotDecimal near
    785					 ; convert character
    786	000006B9  3C 41			   cmp al,"A" ;	minimum
    787	000006BB  72 0D			   jb EndHex2bin ; end
    788	000006BD  3C 46			   cmp al,"F" ;	maximum
    789	000006BF  77 09			   ja EndHex2bin ; end
    790					 ; convert to binary
    791	000006C1  2C 37			   sub al,"A"-0Ah
    792	000006C3  C1 E2	04		   shl edx,4 ; output
    793	000006C6  32 D0			   xor dl,al ; insert
    794	000006C8  EB DB			   jmp ConvertInput
    795	000006CA			 label EndHex2bin near
    796	000006CA  C3			   ret ; return
    797	000006CB			 endp hex2bin
    798
Turbo Assembler	 Version 4.1	    12-10-13 18:38:54	    Page 15
stream.asm



    799	000006CB			 codeseg
    800	000006CB			 proc ProcessArguments near
    801					 ; scan	for forward slash
    802	000006CB  8A 07			   mov al,[edi]	; character
    803	000006CD  47			   inc edi ; next position
    804	000006CE  3C 00			   cmp al,00h ;	terminator
    805	000006D0  74 5F			   je EndScanString ; done
    806	000006D2  3C 2F			   cmp al,'/' ;	parameter
    807	000006D4  75 F5			   jne ProcessArguments
    808					 ; parm	AlternateSetting
    809	000006D6  80 3F	61		   cmp [byte(edi)],'a'
    810	000006D9  75 13			   jne NotAltSetting
    811	000006DB  E8 FFFFFFC3		   call	hex2bin	; convert
    812					 ; override bAlternateSetting
    813	000006E0  88 15	0001019Er	   mov [byte(SetInterface+2)],dl
    814	000006E6  88 15	000101A9r	   mov [byte(IsoParm+5)],dl
    815	000006EC  EB DD			   jmp ProcessArguments
    816	000006EE			 label NotAltSetting near
    817					 ; parm	EndpointAddress
    818	000006EE  80 3F	65		   cmp [byte(edi)],'e'
    819	000006F1  75 0D			   jne NotEptAddress
    820	000006F3  E8 FFFFFFAB		   call	hex2bin	; convert
    821					 ; override bEndpointAddress
    822	000006F8  88 15	000101A8r	   mov [byte(IsoParm+4)],dl
    823	000006FE  EB CB			   jmp ProcessArguments
    824	00000700			 label NotEptAddress near
    825					 ; parm	IsoFrameCount
    826	00000700  80 3F	66		   cmp [byte(edi)],'f'
    827	00000703  75 0E			   jne NotFrameCount
    828	00000705  E8 FFFFFF99		   call	hex2bin	; convert
    829					 ; override wIsoFrameCount
    830	0000070A  66| 89 15 000101B0r	   mov [word(IsoParm+12)],dx
    831	00000711  EB B8			   jmp ProcessArguments
    832	00000713			 label NotFrameCount near
    833					 ; parm	InterfaceNumber
    834	00000713  80 3F	69		   cmp [byte(edi)],'i'
    835	00000716  75 0D			   jne NotIntfcNumber
    836	00000718  E8 FFFFFF86		   call	hex2bin	; convert
    837					 ; override bInterfaceNumber
    838	0000071D  88 15	000101A0r	   mov [byte(SetInterface+4)],dl
    839	00000723  EB A6			   jmp ProcessArguments
    840	00000725			 label NotIntfcNumber near
    841					 ; parm	DeviceDriverName
    842	00000725  80 3F	6E		   cmp [byte(edi)],'n'
    843	00000728  75 A1			   jne ProcessArguments
    844	0000072A  E8 FFFFFF36		   call	chr2ddn	; update
    845	0000072F  EB 9A			   jmp ProcessArguments
    846	00000731			 label EndScanString near
    847					 ; skip	sanity checks
    848	00000731  C3			   ret ; return
    849	00000732			 endp ProcessArguments
    850
    851	00000732			 dataseg
    852	000101BE  30 31	32 33 34 35 36+	 hex2ascii db '0123456789ABCDEF'
    853		  37 38	39 41 42 43 44+
    854		  45 46
    855
Turbo Assembler	 Version 4.1	    12-10-13 18:38:54	    Page 16
stream.asm



    856	000101CE			 dataseg
    857	000101CE  5B 3F	3F 3F 3F 3F 3F+	 szStatus db '[????????]',13,10
    858		  3F 3F	5D 0D 0A
    859
    860	000101DA			 codeseg
    861	00000732			 proc ShowReturnCode near
    862					 ; skip	zero return code
    863	00000732  85 C0			   test	eax,eax	; zero
    864	00000734  74 35			   jz EndShow ;	finished
    865	00000736  50			   push	eax ; save register
    866					 ; convert return code
    867	00000737  B9 00000008		   mov ecx,8 ; code length
    868	0000073C			 label ConvertDigit near
    869	0000073C  8B D0			   mov edx,eax ; error code
    870	0000073E  83 E2	0F		   and edx,0000000Fh ; digit
    871	00000741  8A 92	000101BEr	   mov dl,[hex2ascii+edx]
    872	00000747  88 91	000101CEr	   mov [szStatus+ecx],dl
    873	0000074D  C1 E8	04		   shr eax,4 ; next one
    874	00000750  E2 EA			   loop	ConvertDigit
    875					 ; show	appropriate info message
    876					   call	DosWrite c,1,offset(szStatus),12,offset(BytesDone)
1   877	00000752  68 00000004r			 PUSH	 OFFSET(BYTESDONE)
1   878	00000757  6A 0C				 PUSH	 12
1   879	00000759  68 000101CEr			 PUSH	 OFFSET(SZSTATUS)
1   880	0000075E  6A 01				 PUSH	 1
1   881	00000760  E8 00000000e			 CALL	 DOSWRITE
1   882	00000765  83 C4	10			 ADD	 ESP,00010h
    883	00000768  58			   pop eax ; restore register
    884	00000769  85 C0			   test	eax,eax	; check
    885	0000076B			 label EndShow near
    886	0000076B  C3			   ret ; return
    887	0000076C			 endp ShowReturnCode
    888
    889					 end MainRoutine
Turbo Assembler	 Version 4.1	    12-10-13 18:38:54	    Page 17
Symbol Table




Symbol Name			  Type	 Value

??DATE				  Text	 "12-10-13"
??FILENAME			  Text	 "stream  "
??TIME				  Text	 "18:38:54"
??VERSION			  Number 0401
@32BIT				  Text	 1
@@ARG				  Number [FLAT:EBP+0014]
@@ENV				  Number [FLAT:EBP+0010]
@@MOD				  Number [FLAT:EBP+0008]
@@NUL				  Number [FLAT:EBP+000C]
@@REASONCODE			  Number [FLAT:EBP+0008]
@CODE				  Text	 FLAT
@CODESIZE			  Text	 0
@CPU				  Text	 1F9FH
@CURSEG				  Text	 _TEXT
@DATA				  Text	 FLAT
@DATASIZE			  Text	 0
@FILENAME			  Text	 STREAM
@INTERFACE			  Text	 00H
@MODEL				  Text	 1
@STACK				  Text	 FLAT
@WORDSIZE			  Text	 4
ACTIONTAKEN			  Dword	 FLAT:0000
ADDMULTIPLIER			  Near	 FLAT:0191
ASIZE				  Number 00010000
AWAITFILLEDISOBUFFERS		  Near	 FLAT:0511
BADDOSOPENATTEMPT		  Near	 FLAT:0331
BADRAWOPENATTEMPT		  Near	 FLAT:035A
BYTESDONE			  Dword	 FLAT:0004
CHR2DDN				  Near	 FLAT:0665
CONFIGDESCRIPTOR		  Byte	 FLAT:0018
CONVERTDIGIT			  Near	 FLAT:073C
CONVERTINPUT			  Near	 FLAT:06A5
DATALEN				  Dword	 FLAT:201C
DECREMENTFREEBUFFERS		  Near	 FLAT:0648
DOSCLOSE			  Near	 ----:---- Extern
DOSCLOSEEVENTSEM		  Near	 ----:---- Extern
DOSCREATEEVENTSEM		  Near	 ----:---- Extern
DOSDEVIOCTL			  Near	 ----:---- Extern
DOSEXIT				  Near	 ----:---- Extern
DOSEXITLIST			  Near	 ----:---- Extern
DOSOPEN				  Near	 ----:---- Extern
DOSRESETEVENTSEM		  Near	 ----:---- Extern
DOSSETPRIORITY			  Near	 ----:---- Extern
DOSSLEEP			  Near	 ----:---- Extern
DOSWAITEVENTSEM			  Near	 ----:---- Extern
DOSWRITE			  Near	 ----:---- Extern
ENDCHR2DDN			  Near	 FLAT:06A2
ENDHEX2BIN			  Near	 FLAT:06CA
ENDMULTIPLIER			  Near	 FLAT:0197
ENDPROCESS			  Near	 FLAT:0304
ENDSCANSTRING			  Near	 FLAT:0731
ENDSETFRAMESIZEARRAY		  Near	 FLAT:04CD
ENDSHOW				  Near	 FLAT:076B
FHDEVICE			  Dword	 FLAT:0008
Turbo Assembler	 Version 4.1	    12-10-13 18:38:54	    Page 18
Symbol Table



FHOUTPUT			  Dword	 FLAT:000C
FUSED				  Number 0000
GETCONFIGDESCRIPTOR		  Dword	 FLAT:0010
HEX2ASCII			  Byte	 FLAT:000101BE
HEX2BIN				  Near	 FLAT:06A3
ISIZE				  Number 5555
ISODATA				  Byte	 FLAT:0000
ISOFREE				  Dword	 FLAT:000101B2
ISOPARM				  Dword	 FLAT:000101A4
ISOPOST				  Dword	 FLAT:2020
ISOTHIS				  Dword	 FLAT:000101B6
IUSED				  Number 0003
MAINROUTINE			  Near	 FLAT:0000
MSIZE				  Number FFFF
NEXTDESCRIPTOR			  Near	 FLAT:00F6
NOTALTSETTING			  Near	 FLAT:06EE
NOTDECIMAL			  Near	 FLAT:06B9
NOTEPTADDRESS			  Near	 FLAT:0700
NOTFRAMECOUNT			  Near	 FLAT:0713
NOTINTFCNUMBER			  Near	 FLAT:0725
NOTISOOPENATTEMPT		  Near	 FLAT:0308
PARMLEN				  Dword	 FLAT:2024
PROCESSARGUMENTS		  Near	 FLAT:06CB
PROCESSCOMPLETE			  Near	 FLAT:037C
PROCESSISOSTREAM		  Near	 FLAT:04AB
PROCESSRAWISODATA		  Near	 FLAT:055A
QUEUEEMPTYISOBUFFER		  Near	 FLAT:05EC
QUEUEEMPTYISOBUFFERS		  Near	 FLAT:04B0
RAWBYTESDONE			  Dword	 FLAT:000101BA
SCANDESCRIPTORS			  Near	 FLAT:0105
SCANINTERFACE			  Near	 FLAT:0140
SETCONFIGURATION		  Byte	 FLAT:00010194
SETINTERFACE			  Byte	 FLAT:0001019C
SGOOD0				  Byte	 FLAT:00010019
SGOOD1				  Byte	 FLAT:00010023
SGOOD2				  Byte	 FLAT:0001002D
SGOOD3				  Byte	 FLAT:00010039
SGOOD4				  Byte	 FLAT:00010046
SGOOD5				  Byte	 FLAT:00010053
SHOWRETURNCODE			  Near	 FLAT:0732
SINFO0				  Byte	 FLAT:00010053
SINFO1				  Byte	 FLAT:00010068
SINFO2				  Byte	 FLAT:00010080
SINFO3				  Byte	 FLAT:0001009E
SINFO4				  Byte	 FLAT:000100B9
SINFO5				  Byte	 FLAT:000100CF
SINFO6				  Byte	 FLAT:000100E5
SINFO7				  Byte	 FLAT:000100FB
SINFO8				  Byte	 FLAT:00010115
SINFO9				  Byte	 FLAT:00010133
SINFOA				  Byte	 FLAT:00010148
SINFOB				  Byte	 FLAT:00010154
SINFOC				  Byte	 FLAT:00010160
SINFOD				  Byte	 FLAT:0001016A
STEST0				  Byte	 FLAT:0001016A
STEST1				  Byte	 FLAT:0001017F
STEST2				  Byte	 FLAT:00010194
Turbo Assembler	 Version 4.1	    12-10-13 18:38:54	    Page 19
Symbol Table



SZDEVICE			  Byte	 FLAT:00010000
SZDRIVER			  Byte	 FLAT:00010005
SZOUTPUT			  Byte	 FLAT:0001000E
SZSTATUS			  Byte	 FLAT:000101CE
TSIZE				  Number FFFF
UPDATEDRIVERNAME		  Near	 FLAT:0667
WISOFRAMELENGTH			  Dword	 FLAT:2018
WRITEISOCHRONOUSFRAME		  Near	 FLAT:0596
WRITESTREAMDATABYTES		  Near	 FLAT:05CE

Groups & Segments		  Bit Size Align  Combine Class

DGROUP				  Group
  STACK				  32  2000 Para	  Stack	  STACK
  _BSS				  32  2028 Dword  Public  BSS
  _DATA				  32  000101DA Dword  Public  DATA
FLAT				  Group
_TEXT				  32  076C Dword  Public  CODE
